"""empty message

Revision ID: bc3e5933e69d
Revises: 
Create Date: 2017-07-02 16:27:55.090432

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bc3e5933e69d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('weekday')
    op.drop_table('unit')
    op.drop_table('item_in_storage')
    op.drop_table('recipe')
    op.drop_table('ingredient')
    op.drop_table('house_recipe')
    op.drop_table('meal_type')
    op.drop_table('recipe_type')
    op.drop_table('user_recipe')
    op.drop_table('step_ingredient')
    op.drop_table('user_info')
    op.drop_table('schema_migrations')
    op.drop_table('ownership')
    op.drop_table('house')
    op.drop_table('step')
    op.drop_table('member_of')
    op.drop_table('schedule')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schedule',
    sa.Column('house_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('week_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['house_id'], ['house.id'], name='schedule_house_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], name='schedule_recipe_id_fkey'),
    sa.ForeignKeyConstraint(['type_id'], ['meal_type.id'], name='schedule_type_id_fkey'),
    sa.ForeignKeyConstraint(['week_id'], ['weekday.id'], name='schedule_week_id_fkey'),
    sa.PrimaryKeyConstraint('house_id', 'week_id', 'type_id', name='schedule_pkey')
    )
    op.create_table('member_of',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('house_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('own_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['house_id'], ['house.id'], name='member_of_house_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['own_type'], ['ownership.own_type'], name='member_of_own_type_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user_info.id'], name='member_of_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'house_id', 'own_type', name='member_of_pkey')
    )
    op.create_table('step',
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], name='step_recipe_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('recipe_id', 'id', name='step_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('house',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('house_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.VARCHAR(length=355), autoincrement=False, nullable=False),
    sa.Column('grocery_day', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('household_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['grocery_day'], ['weekday.day'], name='house_grocery_day_fkey'),
    sa.PrimaryKeyConstraint('id', name='house_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('ownership',
    sa.Column('own_type', sa.INTEGER(), nullable=False),
    sa.Column('description', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('own_type', name='ownership_pkey')
    )
    op.create_table('schema_migrations',
    sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.UniqueConstraint('version', name='schema_migrations_version_key')
    )
    op.create_table('user_info',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_info_id_seq'::regclass)"), nullable=False),
    sa.Column('email', sa.VARCHAR(length=355), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=355), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_info_pkey'),
    sa.UniqueConstraint('email', name='user_info_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('step_ingredient',
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('step_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ingredient_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('unit_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredient.id'], name='step_ingredient_ingredient_id_fkey'),
    sa.ForeignKeyConstraint(['recipe_id', 'step_id'], ['step.recipe_id', 'step.id'], name='step_ingredient_recipe_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], name='step_ingredient_unit_id_fkey'),
    sa.PrimaryKeyConstraint('recipe_id', 'step_id', 'ingredient_id', name='step_ingredient_pkey')
    )
    op.create_table('user_recipe',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], name='user_recipe_recipe_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user_info.id'], name='user_recipe_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'recipe_id', name='user_recipe_pkey')
    )
    op.create_table('recipe_type',
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], name='recipe_type_recipe_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['type_id'], ['meal_type.id'], name='recipe_type_type_id_fkey'),
    sa.PrimaryKeyConstraint('recipe_id', 'type_id', name='recipe_type_pkey')
    )
    op.create_table('meal_type',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='meal_type_pkey'),
    sa.UniqueConstraint('type', name='meal_type_type_key')
    )
    op.create_table('house_recipe',
    sa.Column('house_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('recipe_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['house_id'], ['house.id'], name='house_recipe_house_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], name='house_recipe_recipe_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('house_id', 'recipe_id', name='house_recipe_pkey')
    )
    op.create_table('ingredient',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('ingredient_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.VARCHAR(length=355), autoincrement=False, nullable=False),
    sa.Column('carb_per_100g', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('protein_per_100g', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('fat_per_100g', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('fiber_per_100g', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('calories_per_100g', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='ingredient_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('recipe',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=355), autoincrement=False, nullable=False),
    sa.Column('serves_for', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('image', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='recipe_pkey')
    )
    op.create_table('item_in_storage',
    sa.Column('house_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ingredient_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('unit_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['house_id'], ['house.id'], name='item_in_storage_house_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredient.id'], name='item_in_storage_ingredient_id_fkey'),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], name='item_in_storage_unit_id_fkey'),
    sa.PrimaryKeyConstraint('house_id', 'ingredient_id', name='item_in_storage_pkey')
    )
    op.create_table('unit',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='unit_pkey'),
    sa.UniqueConstraint('name', name='unit_name_key')
    )
    op.create_table('weekday',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('day', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='weekday_pkey'),
    sa.UniqueConstraint('day', name='weekday_day_key')
    )
    # ### end Alembic commands ###
